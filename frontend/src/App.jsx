// frontend/src/App.jsx
import { useEffect, useState } from "react";
import RestaurantList from "./components/RestaurantList";
import RestaurantDetail from "./components/RestaurantDetail";
import FilterPanel from "./components/FilterPanel";
import SearchBar from "./components/SearchBar";
import "./App.css";

function App() {
    const [selectedRestaurantId, setSelectedRestaurantId] = useState(null);

    // ‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å (‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏ó‡∏µ‡πà App)
    const [filters, setFilters] = useState({
        search: "",
        category: "",
        minRating: "",
        priceRange: "",
        sortBy: "", // ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡πÑ‡∏ß‡πâ‡πÉ‡∏´‡πâ FilterPanel ‡πÉ‡∏ä‡πâ
    });

    // ‡πÄ‡∏î‡∏ö‡∏≤‡∏ß‡∏ô‡πå‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    const [searchInput, setSearchInput] = useState("");
    useEffect(() => {
        const t = setTimeout(() => {
            setFilters((prev) => ({ ...prev, search: searchInput.trim() }));
        }, 500);
        return () => clearTimeout(t);
    }, [searchInput]);

    const handleFilterChange = (partial) =>
        setFilters((prev) => ({ ...prev, ...partial }));

    // ===== Stats (‡πÇ‡∏ä‡∏ß‡πå‡∏ó‡∏µ‡πà Header) =====
    const [stats, setStats] = useState(null);
    const [statsErr, setStatsErr] = useState("");
    useEffect(() => {
        const controller = new AbortController();
        const API =
            (typeof import.meta !== "undefined" && import.meta.env?.VITE_API_URL) ||
            (typeof process !== "undefined" && process.env?.VITE_API_URL) ||
            "http://localhost:3000/api";

        (async () => {
            try {
                setStatsErr("");
                const res = await fetch(`${API}/stats`, { signal: controller.signal });
                const data = await res.json();
                if (!res.ok || !data?.success) {
                    throw new Error(data?.message || "‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
                }
                setStats(data.data);
            } catch (e) {
                if (e.name !== "AbortError") setStatsErr(e.message || "‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
            }
        })();

        return () => controller.abort();
    }, []);

    return (
        <div className="app">
            {/* ===== Header / Hero ===== */}
            <header className="app-header" role="banner" aria-label="‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÅ‡∏≠‡∏õ">
                <h1>üçú Restaurant Review</h1>
                <p>‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</p>

                {/* ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏ö‡∏ö badge ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ò‡∏µ‡∏° */}
                <div style={{ marginTop: 14, display: "flex", gap: 8, justifyContent: "center", flexWrap: "wrap" }}>
                    {stats ? (
                        <>
                            <span className="badge">‡∏£‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {stats.totalRestaurants ?? 0}</span>
                            <span className="badge">‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {stats.totalReviews ?? 0}</span>
                            <span className="badge">‡πÄ‡∏£‡∏ï‡∏ï‡∏¥‡πâ‡∏á‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: {stats.averageRating ?? 0}</span>
                        </>
                    ) : statsErr ? (
                        <span className="badge">‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</span>
                    ) : (
                        <span className="badge">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‚Ä¶</span>
                    )}
                </div>
            </header>

            {/* ===== Main ===== */}
            <main className="app-main" role="main">
                {selectedRestaurantId ? (
                    <RestaurantDetail
                        restaurantId={selectedRestaurantId}
                        onBack={() => setSelectedRestaurantId(null)}
                    />
                ) : (
                    <>
                        {/* ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡πâ‡∏≤‡∏ô */}
                        <section aria-label="‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£">
                            <RestaurantList
                                filters={filters}
                                onSelectRestaurant={(id) => setSelectedRestaurantId(id)}
                            />
                        </section>
                    </>
                )}
            </main>

            {/* ===== Footer ===== */}
            <footer className="app-footer" role="contentinfo">
                <p>&copy; 2024 Restaurant Review App | ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏¢ React + Express</p>
            </footer>
        </div>
    );
}

export default App;